{"version":3,"sources":["components/ConfigScreen.tsx","components/EntryEditor.tsx","components/Page.tsx","features/violations/violationsSlice.js","features/rules/rulesSelectors.js","features/violations/selectViolations.js","features/violations/violationSidebar.jsx","features/violations/violationSidebarContainer.jsx","components/Sidebar.jsx","components/Field.tsx","components/Dialog.tsx","features/rules/processContentfulRules.js","features/rules/rulesSlice.js","reducers/index.js","index.tsx"],"names":["Config","props","onConfigure","a","sdk","app","getCurrentState","currentState","parameters","state","targetState","this","getParameters","setState","setReady","className","css","margin","Component","Entry","Page","violationsSlice","createSlice","name","initialState","reducers","clearViolations","reducer","addViolation","action","violation","payload","push","id","nanoid","actions","selectRules","rules","selectRulesStatus","status","selectViolations","createSelector","violations","ViolationSidebar","length","style","marginTop","map","v","fix","connect","Sidebar","dispatch","useDispatch","bodyField","entry","fields","useSelector","worker","Worker","onmessage","e","data","forEach","useEffect","window","startAutoResizer","detach","onValueChanged","value","postMessage","content","documentToPlainTextString","Field","Dialog","processContentfulRules","contentfulRules","contentfulRule","fetchRules","createAsyncThunk","thunkAPI","space","getEntries","content_type","then","res","items","rulesSlice","extraReducers","pending","fulfilled","rejected","combineReducers","violationsReducer","rulesReducer","init","root","document","getElementById","store","configureStore","rootReducer","location","locations","LOCATION_APP_CONFIG","component","LOCATION_ENTRY_FIELD","LOCATION_ENTRY_EDITOR","EntryEditor","LOCATION_DIALOG","LOCATION_ENTRY_SIDEBAR","LOCATION_PAGE","componentLocationSetting","is","render"],"mappings":"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","file":"static/js/main.69f85883.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppExtensionSDK } from '@contentful/app-sdk';\nimport { Heading, Form, Workbench, Paragraph } from '@contentful/forma-36-react-components';\nimport { css } from 'emotion';\n\nexport interface AppInstallationParameters {}\n\ninterface ConfigProps {\n  sdk: AppExtensionSDK;\n}\n\ninterface ConfigState {\n  parameters: AppInstallationParameters;\n}\n\nexport default class Config extends Component<ConfigProps, ConfigState> {\n  constructor(props: ConfigProps) {\n    super(props);\n    this.state = { parameters: {} };\n\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    props.sdk.app.onConfigure(() => this.onConfigure());\n  }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    const parameters: AppInstallationParameters | null = await this.props.sdk.app.getParameters();\n\n    this.setState(parameters ? { parameters } : this.state, () => {\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      this.props.sdk.app.setReady();\n    });\n  }\n\n  onConfigure = async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await this.props.sdk.app.getCurrentState();\n\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters: this.state.parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: currentState,\n    };\n  };\n\n  render() {\n    return (\n      <Workbench className={css({ margin: '80px' })}>\n        <Form>\n          <Heading>App Config</Heading>\n          <Paragraph>Welcome to your contentful app. This is your config page.</Paragraph>\n        </Form>\n      </Workbench>\n    );\n  }\n}\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { EditorExtensionSDK } from '@contentful/app-sdk';\n\ninterface EditorProps {\n  sdk: EditorExtensionSDK;\n}\n\nconst Entry = (props: EditorProps) => {\n  return <Paragraph>Hello Entry Editor Component</Paragraph>;\n};\n\nexport default Entry;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { PageExtensionSDK } from '@contentful/app-sdk';\n\ninterface PageProps {\n  sdk: PageExtensionSDK;\n}\n\nconst Page = (props: PageProps) => {\n  return <Paragraph>Hello Page Component</Paragraph>;\n};\n\nexport default Page;\n","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst violationsSlice = createSlice({\n  name: \"violations\",\n  initialState: [],\n  reducers: {\n    clearViolations: {\n      reducer() {\n        return [];\n      },\n    },\n    addViolation: {\n      reducer(state, action) {\n        const violation = action.payload;\n        state.push({ id: nanoid(), ...violation });\n      },\n    },\n  },\n});\n\nexport const { addViolation, clearViolations } = violationsSlice.actions;\n\nexport default violationsSlice.reducer;\n","export const selectRules = (state) => state.rules.rules;\nexport const selectRulesStatus = (state) => state.rules.status;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst violations = (state) => state.violations;\nconst selectViolations = createSelector([violations], (violations) => {\n  return violations;\n});\n\nexport default selectViolations;\n","import {\n  List,\n  ListItem,\n  Paragraph,\n} from \"@contentful/forma-36-react-components\";\nconst ViolationSidebar = ({ violations, status }) => {\n  switch (status) {\n    case \"Loading\":\n      return <Paragraph>Fetching the style rules...</Paragraph>;\n\n    case \"Success\":\n      return violations && violations.length > 0 ? (\n        <>\n          <Paragraph>\n            There are <b>{violations.length}</b> issues in your content.\n          </Paragraph>\n          <List style={{ marginTop: \"12px\" }}>\n            {violations.map((v) => {\n              return (\n                <ListItem key={v.id}>\n                  <Paragraph>{`${v.name} - ${v.fix}`}</Paragraph>\n                </ListItem>\n              );\n            })}\n          </List>\n        </>\n      ) : (\n        <Paragraph>Your content looks great! 🎉</Paragraph>\n      );\n\n    case \"Failure\":\n      return <Paragraph>Ooops</Paragraph>;\n  }\n};\n\nexport default ViolationSidebar;\n","import { connect } from \"react-redux\";\nimport { selectRulesStatus } from \"../rules/rulesSelectors\";\nimport selectViolations from \"./selectViolations\";\nimport ViolationSidebar from \"./violationSidebar\";\n\nconst mapStateToProps = (state) => ({\n  violations: selectViolations(state),\n  status: selectRulesStatus(state),\n});\n\nexport default connect(mapStateToProps, null)(ViolationSidebar);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { documentToPlainTextString } from \"@contentful/rich-text-plain-text-renderer\";\n\nimport {\n  addViolation,\n  clearViolations,\n} from \"../features/violations/violationsSlice\";\nimport ViolationSidebarContainer from \"../features/violations/violationSidebarContainer\";\n\nimport {\n  selectRulesStatus,\n  selectRules,\n} from \"../features/rules/rulesSelectors\";\n\nconst BODY_FIELD_ID = \"body\";\n\nconst Sidebar = (props) => {\n  const { sdk } = props;\n  const dispatch = useDispatch();\n  const bodyField = sdk.entry.fields[BODY_FIELD_ID];\n\n  const status = useSelector(selectRulesStatus);\n  const rules = useSelector(selectRules);\n\n  const worker = new Worker(\"rules-worker.js\");\n  worker.onmessage = (e) => {\n    dispatch(clearViolations());\n    const { violations } = e.data;\n    violations?.forEach((v) => {\n      dispatch(addViolation(v));\n    });\n  };\n\n  useEffect(() => {\n    sdk.window.startAutoResizer();\n  }, []);\n\n  useEffect(() => {\n    const detach = bodyField.onValueChanged((value) => {\n      if (status === \"Success\") {\n        worker.postMessage({\n          content: documentToPlainTextString(value),\n          rules: rules,\n        });\n      }\n    });\n\n    return () => detach();\n  }, [bodyField, status]);\n\n  return <ViolationSidebarContainer />;\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\n\nconst Field = (props: FieldProps) => {\n  // If you only want to extend Contentful's default editing experience\n  // reuse Contentful's editor components\n  // -> https://www.contentful.com/developers/docs/extensibility/field-editors/\n  return <Paragraph>Hello Entry Field Component</Paragraph>;\n};\n\nexport default Field;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { DialogExtensionSDK } from '@contentful/app-sdk';\n\ninterface DialogProps {\n  sdk: DialogExtensionSDK;\n}\n\nconst Dialog = (props: DialogProps) => {\n  return <Paragraph>Hello Dialog Component</Paragraph>;\n};\n\nexport default Dialog;\n","export default function processContentfulRules(contentfulRules) {\n  const rules = [];\n\n  if (contentfulRules) {\n    contentfulRules.forEach((contentfulRule) =>\n      rules.push(contentfulRule.fields)\n    );\n  }\n  return rules;\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport processContentfulRules from \"./processContentfulRules\";\n\nexport const fetchRules = createAsyncThunk(\n  \"rules/fetchRules\",\n  async (sdk, thunkAPI) => {\n    return sdk.space.getEntries({ content_type: \"styleRule\" }).then((res) => {\n      return processContentfulRules(res.items);\n    });\n  }\n);\n\nconst rulesSlice = createSlice({\n  name: \"rules\",\n  initialState: { rules: [], status: \"NotAsked\" },\n  reducers: {},\n  extraReducers: {\n    [fetchRules.pending]: (state) => {\n      state.status = \"Loading\";\n    },\n    [fetchRules.fulfilled]: (state, action) => {\n      state.rules = action.payload;\n      state.status = \"Success\";\n    },\n    [fetchRules.rejected]: (state) => {\n      state.status = \"Failure\";\n    },\n  },\n});\n\nexport default rulesSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport violationsReducer from \"../features/violations/violationsSlice\";\nimport rulesReducer from \"../features/rules/rulesSlice\";\n\nexport default combineReducers({\n  violations: violationsReducer,\n  rules: rulesReducer,\n});\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport {\n  AppExtensionSDK,\n  FieldExtensionSDK,\n  SidebarExtensionSDK,\n  DialogExtensionSDK,\n  EditorExtensionSDK,\n  PageExtensionSDK,\n  init,\n  locations,\n} from \"@contentful/app-sdk\";\nimport \"@contentful/forma-36-react-components/dist/styles.css\";\nimport \"@contentful/forma-36-fcss/dist/styles.css\";\nimport \"@contentful/forma-36-tokens/dist/css/index.css\";\nimport \"./index.css\";\n\nimport Config from \"./components/ConfigScreen\";\nimport EntryEditor from \"./components/EntryEditor\";\nimport Page from \"./components/Page\";\nimport Sidebar from \"./components/Sidebar.jsx\";\nimport Field from \"./components/Field\";\nimport Dialog from \"./components/Dialog\";\n\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nimport LocalhostWarning from \"./components/LocalhostWarning\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { fetchRules } from \"./features/rules/rulesSlice.js\";\n\nif (process.env.NODE_ENV === \"development\" && window.self === window.top) {\n  // You can remove this if block before deploying your app\n  const root = document.getElementById(\"root\");\n  render(<LocalhostWarning />, root);\n} else {\n  init((sdk) => {\n    const root = document.getElementById(\"root\");\n\n    const store = configureStore({\n      reducer: rootReducer,\n    });\n\n    // @ts-ignore\n    store.dispatch(fetchRules(sdk));\n\n    // All possible locations for your app\n    // Feel free to remove unused locations\n    // Dont forget to delete the file too :)\n    const ComponentLocationSettings = [\n      {\n        location: locations.LOCATION_APP_CONFIG,\n        component: <Config sdk={sdk as AppExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_ENTRY_FIELD,\n        component: <Field sdk={sdk as FieldExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_ENTRY_EDITOR,\n        component: <EntryEditor sdk={sdk as EditorExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_DIALOG,\n        component: <Dialog sdk={sdk as DialogExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_ENTRY_SIDEBAR,\n        component: <Sidebar sdk={sdk as SidebarExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_PAGE,\n        component: <Page sdk={sdk as PageExtensionSDK} />,\n      },\n    ];\n\n    // Select a component depending on a location in which the app is rendered.\n    ComponentLocationSettings.forEach((componentLocationSetting) => {\n      if (sdk.location.is(componentLocationSetting.location)) {\n        render(\n          <Provider store={store}>\n            {componentLocationSetting.component}\n          </Provider>,\n          root\n        );\n      }\n    });\n  });\n}\n"],"sourceRoot":""}